{"version":3,"sources":["App.js"],"names":["COMMON_PREFIX","fuse","Fuse","names","shouldSort","includeMatches","threshold","location","distance","maxPatternLength","minMatchCharLength","SpeechRecognition","webkitSpeechRecognition","SpeechGrammarList","webkitSpeechGrammarList","SpeechRecognitionEvent","webkitSpeechRecognitionEvent","recognition","lang","interimResults","maxAlternatives","onnomatch","event","console","log","onerror","error","App","normal_image_uri","results","_useState","useState","_useState2","Object","_Users_aleck_landgraf_code_MTG_recognizer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","cardMatch","setCardMatch","_useState3","_useState4","recognitionInProgress","setRecogitionInProgress","handleResult","last","length","card","transcript","toLowerCase","handleSpeechEnd","stop","handleClick","start","useEffect","onresult","onspeechend","search","imageUris","item","concat","_unused","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_5___default","onClick","variant","size","disabled","src","alt","height"],"mappings":"gLAMMA,EAAgB,yCAWhBC,EAAO,IAAIC,IAAKC,IATA,CACpBC,YAAY,EACZC,gBAAgB,EAChBC,UAAW,GACXC,SAAU,EACVC,SAAU,IACVC,iBAAkB,GAClBC,mBAAoB,IAMhBC,EAAoBA,GAAqBC,wBACzCC,EAAoBA,GAAqBC,wBACzCC,EACJA,GAA0BC,6BAGtBC,EAAc,IAAIN,EAGxBM,EAAYC,KAAO,QACnBD,EAAYE,gBAAiB,EAC7BF,EAAYG,gBAAkB,GAE9BH,EAAYI,UAAY,SAASC,GAC/BC,QAAQC,IAAI,kCAGdP,EAAYQ,QAAU,SAASH,GAC7BC,QAAQC,IAAI,kCAAoCF,EAAMI,QA4FzCC,UAvFf,WAAe,IA6BTC,EACAC,EA9BSC,EACqBC,mBAAS,IAD9BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACKI,EADLJ,EAAA,GAAAK,EAE4CN,oBAAS,GAFrDO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAENE,EAFMD,EAAA,GAEiBE,EAFjBF,EAAA,GAIb,SAASG,EAAanB,GACpB,IAAIoB,EAAOpB,EAAMO,QAAQc,OAAS,EAC5BC,EAAOtB,EAAMO,QAAQa,GAAM,GAAGG,WAEpCT,GAAcQ,GAAQ,IAAIE,eAG5B,SAASC,IACP9B,EAAY+B,OACZR,GAAwB,GAG1B,SAASS,IACFV,IACHC,GAAwB,GACxBvB,EAAYiC,QACZ3B,QAAQC,IAAI,yBAYhB,GARA2B,oBAAU,WACRlC,EAAYmC,SAAWX,EACvBxB,EAAYoC,YAAcN,GACzB,IAKCZ,EAAW,CACbN,EAAU5B,EAAKqD,OAAOnB,GAEtB,KACEP,EAAmB2B,IAAU1B,EAAQ,GAAG2B,SAEtC5B,EAAgB,GAAA6B,OAAMzD,GAANyD,OAAsB7B,IAExC,MAAA8B,GACA9B,EAAmB,IAIvB,OACE+B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACEE,UAAU,cACVE,QAASf,EACTgB,QAAQ,YACRC,KAAK,QACLC,SAAU5B,GAETA,EAAwB,YAAc,4BAEzCoB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACZlC,EACC+B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OACEO,IAAKxC,EACLyC,IAAG,4BAAAZ,OAA8BtB,GACjCmC,OAAO,QAETX,EAAAC,EAAAC,cAAA,OACEO,IAAKxC,EACLyC,IAAG,4BAAAZ,OAA8BtB,GACjCmC,OAAO,MACPR,UAAU,iBAIdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAGnBH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACEI,QAASf,EACTiB,KAAK,QACLD,QAAQ,YACRE,SAAU5B,GAETA,EAAwB,YAAc","file":"static/js/1.7571b5d7.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Fuse from \"fuse.js\";\nimport { names, imageUris } from \"./cardsArray.json\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\n\nconst COMMON_PREFIX = \"https://img.scryfall.com/cards/normal/\";\n\nconst searchOptions = {\n  shouldSort: true,\n  includeMatches: true,\n  threshold: 0.6,\n  location: 0,\n  distance: 100,\n  maxPatternLength: 32,\n  minMatchCharLength: 1\n};\nconst fuse = new Fuse(names, searchOptions);\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API/Using_the_Web_Speech_API\n/* eslint-disable */\nconst SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;\nconst SpeechGrammarList = SpeechGrammarList || webkitSpeechGrammarList;\nconst SpeechRecognitionEvent =\n  SpeechRecognitionEvent || webkitSpeechRecognitionEvent;\n/* eslint-enable */\n\nconst recognition = new SpeechRecognition();\n\n//recognition.continuous = false;\nrecognition.lang = \"en-US\";\nrecognition.interimResults = false;\nrecognition.maxAlternatives = 10;\n\nrecognition.onnomatch = function(event) {\n  console.log(\"I didnt recognise that color.\");\n};\n\nrecognition.onerror = function(event) {\n  console.log(\"Error occurred in recognition: \" + event.error);\n};\n\nfunction useWebSpeech() {}\n\nfunction App() {\n  const [cardMatch, setCardMatch] = useState(\"\");\n  const [recognitionInProgress, setRecogitionInProgress] = useState(false);\n\n  function handleResult(event) {\n    var last = event.results.length - 1;\n    const card = event.results[last][0].transcript;\n\n    setCardMatch((card || \"\").toLowerCase());\n  }\n\n  function handleSpeechEnd() {\n    recognition.stop();\n    setRecogitionInProgress(false);\n  }\n\n  function handleClick() {\n    if (!recognitionInProgress) {\n      setRecogitionInProgress(true);\n      recognition.start();\n      console.log(\"Ready to hear a card\");\n    }\n  }\n\n  useEffect(() => {\n    recognition.onresult = handleResult;\n    recognition.onspeechend = handleSpeechEnd;\n  }, []);\n\n  let normal_image_uri;\n  let results;\n\n  if (cardMatch) {\n    results = fuse.search(cardMatch);\n    // console.log(results);\n    try {\n      normal_image_uri = imageUris[results[0].item];\n      if (normal_image_uri) {\n        normal_image_uri = `${COMMON_PREFIX}${normal_image_uri}`;\n      }\n    } catch {\n      normal_image_uri = \"\";\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Button\n        className=\"upside-down\"\n        onClick={handleClick}\n        variant=\"contained\"\n        size=\"large\"\n        disabled={recognitionInProgress}\n      >\n        {recognitionInProgress ? \"listening\" : \"Click to start recording\"}\n      </Button>\n      <div className=\"card-display\">\n        {normal_image_uri ? (\n          <div className=\"cards\">\n            <img\n              src={normal_image_uri}\n              alt={`Magic The Gathering Card ${cardMatch}`}\n              height=\"350\"\n            />\n            <img\n              src={normal_image_uri}\n              alt={`Magic The Gathering Card ${cardMatch}`}\n              height=\"350\"\n              className=\"upside-down\"\n            />\n          </div>\n        ) : (\n          <div className=\"spacer\" />\n        )}\n      </div>\n      <Button\n        onClick={handleClick}\n        size=\"large\"\n        variant=\"contained\"\n        disabled={recognitionInProgress}\n      >\n        {recognitionInProgress ? \"listening\" : \"Click to start recording\"}\n      </Button>\n    </div>\n  );\n}\n\nexport default App;\n"],"sourceRoot":""}